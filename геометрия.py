from tkinter import *
from math import pi, sqrt, degrees, atan2

фигуры = {}
canvas = None

def создать_холст(высота, ширина, фон='white', шаг_сетки=25, цвет_сетки='gray'):
    global canvas
    geo = Tk()
    canvas = Canvas(geo, height=высота, width=ширина, bg=перевести_цвет(фон))
    canvas.pack()
    

    создать_сетку(шаг=шаг_сетки, цвет=перевести_цвет(цвет_сетки))
    
    return geo

def создать_сетку(шаг, цвет='gray'):
    """Создает клетчатую сетку на канвасе с заданным шагом."""
    ширина = int(canvas['width'])
    высота = int(canvas['height'])
    
    for x in range(0, ширина, шаг):
        canvas.create_line(x, 0, x, высота, fill=перевести_цвет(цвет))
    
    for y in range(0, высота, шаг):
        canvas.create_line(0, y, ширина, y, fill=перевести_цвет(цвет))
цвета_перевод = {
    'светло-серый': 'lightgray',
    'серый': 'gray',
    'синий': 'blue',
    'красный': 'red',
    'зелёный': 'green',
    'жёлтый': 'yellow',
    'чёрный': 'black',
    'белый': 'white',
    'розовый': 'pink',
    'фиолетовый': 'purple',
    'оранжевый': 'orange',
    'коричневый': 'brown',
    'голубой': 'cyan',
    'темно-синий': 'navy',
}

def перевести_цвет(цвет):
    return цвета_перевод.get(цвет, цвет)


def создать_прямоугольник(имя, x1, y1, x2, y2, фон, обводка):
    canvas.create_rectangle(x1, y1, x2, y2, fill=перевести_цвет(фон), outline=перевести_цвет(обводка))
    фигуры[имя] = [x1, y1, x2, y2]

def площадь_прямоугольника(имя):
    if имя in фигуры:
        x1, y1, x2, y2 = фигуры[имя]
        return abs(x2 - x1) * abs(y2 - y1)
    return None

def периметр_прямоугольника(имя):
    if имя in фигуры:
        x1, y1, x2, y2 = фигуры[имя]
        return 2 * (abs(x2 - x1) + abs(y2 - y1))
    return None

def создать_овал(имя, x1, y1, x2, y2, фон="white", обводка="black"):
    canvas.create_oval(x1, y1, x2, y2, fill=перевести_цвет(фон), outline=перевести_цвет(обводка))
    фигуры[имя] = [x1, y1, x2, y2]

def площадь_овала(имя):
    if имя in фигуры:
        x1, y1, x2, y2 = фигуры[имя]
        a = abs(x2 - x1) / 2  # Полуось x
        b = abs(y2 - y1) / 2  # Полуось y
        return pi * a * b
    return None

def длина_овала(имя):
    if имя in фигуры:
        x1, y1, x2, y2 = фигуры[имя]
        a = abs(x2 - x1) / 2  # Полуось x
        b = abs(y2 - y1) / 2  # Полуось y
        return pi * (3 * (a + b) - sqrt((3 * a + b) * (a + 3 * b)))  # Формула длины эллипса
    return None

def создать_прямую(имя, x1, y1, x2, y2, фон, толщина):
    canvas.create_line(x1, y1, x2, y2, fill=перевести_цвет(фон), width=перевести_цвет(толщина))
    фигуры[имя] = [x1, y1, x2, y2]

def длина_прямой(имя):
    if имя in фигуры:
        x1, y1, x2, y2 = фигуры[имя]
        return sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
    return None

def создать_текст(имя, x, y, текст, цвет="black", шрифт=('Arial', 12)):
    canvas.create_text(x, y, text=текст, fill=перевести_цвет(цвет), font=шрифт)
    фигуры[имя] = (x, y, текст)

def создать_многоугольник(имя, координаты, фон='yellow', обводка='black'):
    canvas.create_polygon(координаты, fill=перевести_цвет(фон), outline=перевести_цвет(обводка))
    фигуры[имя] = координаты

def создать_сектор(имя, x, y, радиус, угол1, угол2, фон='blue', обводка = 'black'):
    x1 = x - радиус
    y1 = y - радиус
    x2 = x + радиус
    y2 = y + радиус
    canvas.create_arc(x1, y1, x2, y2, start=угол1, extent=угол2, fill=перевести_цвет(фон), outline=перевести_цвет(обводка))
    фигуры[имя] = (x, y, радиус, угол1, угол2)

def создать_вектор(имя, x1, y1, x2, y2, фон='black', обводка='black', ширина=2):
    """Создает вектор (стрелку) от точки (x1, y1) до точки (x2, y2) с использованием стандартной стрелки tkinter."""
    canvas.create_line(x1, y1, x2, y2, fill= перевести_цвет(фон), outline = перевести_цвет(обводка), width=ширина, arrow='last')
    фигуры[имя] = [x1, y1, x2, y2]

def получить_вектор(имя):
    """Возвращает вектор по имени из словаря фигур."""
    return фигуры.get(имя)

def сумма_векторов(вектор1, вектор2):
    """Суммирует два вектора."""
    x1_1, y1_1, x2_1, y2_1 = вектор1
    x1_2, y1_2, x2_2, y2_2 = вектор2
    return (x1_1, y1_1, x2_1 + (x2_2 - x1_2), y2_1 + (y2_2 - y1_2))

def разность_векторов(вектор1, вектор2):
    """Вычитает второй вектор из первого."""
    x1_1, y1_1, x2_1, y2_1 = вектор1
    x1_2, y1_2, x2_2, y2_2 = вектор2
    #return (x1_1, y1_1, x2_1 - (x2_2 - x1_2), y2_1 - (y2_2 - y1_2))
    return (x1_1 - x1_2, y1_1 - y1_2, x2_1 - x2_2, y2_1 - y2_2)
def скалярное_произведение(вектор1, вектор2):
    """Вычисляет скалярное произведение двух векторов."""
    x1_1, y1_1, x2_1, y2_1 = вектор1
    x1_2, y1_2, x2_2, y2_2 = вектор2
    return (x2_1 * (x2_2 - x1_2) + y2_1 * (y2_2 - y1_2))

def векторное_произведение(вектор1, вектор2):
    """Вычисляет векторное произведение двух векторов."""
    x1_1, y1_1, x2_1, y2_1 = вектор1
    x1_2, y1_2, x2_2, y2_2 = вектор2
    return (x2_1 * (y2_2 - y1_2) - y2_1 * (x2_2 - x1_2))

def коллинеарные(вектор1, вектор2):
    """Проверяет, являются ли два вектора коллинеарными."""
    x1_1, y1_1, x2_1, y2_1 = вектор1
    x1_2, y1_2, x2_2, y2_2 = вектор2
    return (x2_1 * (y2_2 - y1_2) == y2_1 * (x2_2 - x1_2))

def умножение_на_скаляр(вектор, скаляр):
    """Умножает вектор на скаляр."""
    x1, y1, x2, y2 = вектор
    return (x1, y1, x1 + (x2 - x1) * скаляр, y1 + (y2 - y1) * скаляр)

def угол_с_x(вектор):
    """Возвращает угол в градусах, образованный вектором с прямой, параллельной оси x."""
    x1, y1, x2, y2 = вектор
    dx = x2 - x1  # Изменение по x
    dy = y2 - y1  # Изменение по y
    return degrees(atan2(dy, dx))
def получить_фигуры():
    return фигуры

#geo = создать_холст(высота=500, ширина=500, шаг_сетки=25, цвет_сетки='светло-серый')
#создать_прямоугольник('rect1', 100, 100, 200, 200, фон='blue', обводка='black')
#geo.mainloop()
# Пример использования
#создать_вектор("Vector1", 0, 0, 3, 4)
#создать_вектор("Vector2", 0, 0, 1, 2)

# Получение векторов
#вектор1 = получить_вектор("Vector1")
#вектор2 = получить_вектор("Vector2")

# Операции с векторами
#вектор_сумма = сумма(вектор1, вектор2)
#вектор_разность = разность(вектор1, вектор2)
#скалярное = скалярное_произведение(вектор1, вектор2)
#векторное = векторное_произведение(вектор1, вектор2)
#коллинеарные = коллинеарные(вектор1, вектор2)
#умноженный_вектор = умножение_на_скаляр(вектор1, 2)
#угол = угол_с_x(вектор1)

#print("Сумма векторов:", вектор_сумма)
#print("Разность векторов:", вектор_разность)
#print("Скалярное произведение:", скалярное)
#print("Векторное произведение:", векторное)
#print("Коллинеарные векторы?", коллинеарные)
#print("Вектор, умноженный на 2:", умноженный_вектор)
#print("Угол вектора с осью X:", угол)

# Создаем холст
#geo = создать_холст(500, 500)
#создать_текст("HelloText", 200, 300, "Hello, Canvas!", "purple", ('Arial', 16))

# Создаем многоугольник
#создать_многоугольник("Polygon1", [50, 250, 150, 250, 100, 350], 'yellow', 'black')

# Создаем сектор окружности
#создать_сектор("Sector1", 200, 100, 50, 0, 180, 'lightblue', 'black')
#Базовые фигуры
#создать_прямоугольник("Rect1", 0, 0, 50, 50, "blue", "black")
#создать_овал("Oval1", 60, 60, 150, 150, "red", "black")
#создать_прямую("Line1", 200, 200, 300, 300, "green", 2)

# Пример отображения площади и периметра
#print("Площадь прямоугольника 'Rect1':", площадь_прямоугольника("Rect1"))
#print("Периметр прямоугольника 'Rect1':", периметр_прямоугольника("Rect1"))
#print("Площадь овала 'Oval1':", площадь_овала("Oval1"))
#print("Длина овала 'Oval1':", длина_овала("Oval1"))
#print("Длина прямой 'Line1':", длина_прямой("Line1"))


